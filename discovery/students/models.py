import datetime

from django.db import models
from django.utils import timezone
from applications.models import Application
from django.contrib.auth.models import User

from projects.models import Project




class Student(models.Model):
    # user = models.OneToOneField(User, on_delete=models.CASCADE)
    college_choices = (
    ('College Letters & Science','College Letters & Science'),
    ('College of Engineering','College of Engineering'),
    ('College of Chemistry', 'College of Chemistry'),
    ('College of Environmental Design','College of Environmental Design'),
    ('Rausser College of Natural Resources','Rausser College of Natural Resources'),
    ('Haas School of Business','Haas School of Business'),
    )
    
    email_address = models.EmailField(max_length=100, primary_key= True) # NEED TO PRIMARY KEY
    first_name = models.CharField(max_length=100, null = True)
    last_name = models.CharField(max_length=100, null = True)
    # full_name = models.CharField(max_length=200)
    student_id = models.CharField(max_length=200)
    college = models.CharField(max_length=200)
    major = models.CharField(max_length=200)
    year = models.CharField(max_length=100)
    first_choice = models.CharField(max_length=1000, null=True, blank=True)
    second_choice = models.CharField(max_length=1000, null=True, blank=True)
    third_choice = models.CharField(max_length=1000, null=True, blank=True)

    resume_link = models.CharField(max_length=200, null = True, blank=True)
    general_question = models.CharField(max_length=1000, null = True, blank=True)

    def __str__(self):
        return self.email_address


# class tempApplication(models.Model):
#     student = models.ForeignKey(Student, on_delete=models.CASCADE)

#     # primary key auto-generated by project model
#     #project_id = models.IntegerField()
#     project = models.ForeignKey(Project, on_delete=models.CASCADE)

#     def __str__(self):
#         return self.student.email_address + " application for " + self.project.project_name

class Answer(models.Model):
    student = models.ForeignKey(Student, on_delete=models.CASCADE) # PRIMARY KEY
    application = models.ForeignKey(Application, on_delete=models.CASCADE)
    question_num = models.IntegerField()
    answer_text = models.CharField(max_length=1000)
    def __str__(self):
        return self.answer_text


